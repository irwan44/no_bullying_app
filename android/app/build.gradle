import java.util.regex.Matcher
import java.util.regex.Pattern

def localProperties = loadPropertiesFile('local.properties')
def keystoreProperties = loadPropertiesFile('key.properties')

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.0'
}

def(major, minor, patch) = flutterVersionName.tokenize( '.' )
def versionCodeGlobal = major.toInteger()*10000 + minor.toInteger()*100 + patch.toInteger()

def loadPropertiesFile(String fileName) {
    println(fileName)
    def properties = new Properties()
    def propertiesFile = rootProject.file(fileName)
    if (propertiesFile.exists()) {
        propertiesFile.withReader('UTF-8') { reader ->
            properties.load(reader)
        }
    }
    return properties
}

def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String  tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

    Pattern pattern
    println(tskReqStr)
    if( tskReqStr.contains( "assemble" ) )
        pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    else if( tskReqStr.contains("bundle") )
        pattern = Pattern.compile("bundle(\\w+)(Release|Debug)")
    else
        pattern = Pattern.compile("generate(\\w+)(Release|Debug)")

    Matcher matcher = pattern.matcher( tskReqStr )

    if( matcher.find() )
        return matcher.group(1).toLowerCase()
    else
    {
        println "NO MATCH FOUND"
        return ""
    }
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.rpc.kreki119"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode versionCodeGlobal
        versionName flutterVersionName
        multiDexEnabled true
    }

    lintOptions {
        checkReleaseBuilds false
    }

    signingConfigs {
        debug {

        }

        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['password']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['password']
            applicationVariants.all { variant ->
                variant.outputs.all {
                    def appName = "kreki"
                    def buildType = variant.buildType.name
                    def newName
                    if (buildType == 'debug'){
                        newName = "app-${flutterVersionName}-debug.apk"
                    } else {
                        newName = "${appName}${flutterVersionName}_${variant.getFlavorName()}.apk"
                    }
                    outputFileName = newName
                }
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"
            applicationIdSuffix ".debug"
        }
        prod {
            dimension "default"
        }
    }
}

flutter {
    source '../..'
    target "lib/main_" + getCurrentFlavor() + ".dart"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //for user of flutter local notification
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
}

android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        def builtType = variant.buildType.name
        def flavor = variant.flavorName
        outputFileName = "kreki-${flavor}-${builtType}-${flutterVersionName}.apk"
    }
}